name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        
      - 
        name: Set the value
        id: step_one
        run: |
          echo "NC_LABEL=$(head -n 1 Dockerfile|cut -d":" -f2)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern={{raw}},value=${{env.NC_LABEL}}
            type=sha
          #  type=schedule
          #  type=ref,event=branch
          #  type=semver,pattern={{version}}
          #  type=semver,pattern={{major}}.{{minor}}
          #  type=semver,pattern={{major}}
          flavor: |
            latest=true
     # -
     #   name: Set up QEMU
     #   uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      -
        name: Login to DockerHub
#         if: github.event_name != 'pull_request'
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     # -
     #   name: Login to GHCR
     #   if: github.event_name != 'pull_request'
     #   uses: docker/login-action@v2
     #   with:
     #     registry: ghcr.io
     #     username: ${{ github.repository_owner }}
     #     password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
#         if: github.event_name != 'pull_request'
        with:
          context: .
          push: true # ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
